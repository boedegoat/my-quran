generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["filterJson"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Surah {
  id             Int     @id
  sequence       Int
  numberOfVerses Int     @map("number_of_verses")
  name           Json
  revelation     Json
  tafsir         Json
  preBismillah   Json?
  verses         Verse[]

  @@map("surahs")
}

model Verse {
  id              Int     @id
  inSurah         Int
  surahId         Int     @map("surah_id")
  firstVerseInJuz Boolean @map("first_verse_in_juz")
  meta            Json
  text            Json
  translation     Json
  audio           Json
  tafsir          Json
  surah           Surah   @relation(fields: [surahId], references: [id])

  @@map("verses")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime? @map("email_verified")
  image         String?
  accounts      Account[]
  sessions      Session[]

  @@map("users")
}

model Account {
  id                String  @id @default(cuid())
  userId            String  @map("user_id")
  type              String
  provider          String
  providerAccountId String  @map("provider_account_id")
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verificationtokens")
}
